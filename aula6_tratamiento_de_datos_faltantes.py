# -*- coding: utf-8 -*-
"""Aula6 Tratamiento de datos faltantes.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/18H21yQVn56puv71M0zgsdqO8iSFg7D7U

#Reporte de Analisis V

##Tratamiento de datos faltantes
"""

import pandas as pd

datos = pd.read_csv('alquiler_residencial.csv', sep=';')

datos.head(10)

datos.isnull()  #devuelve true si los valores del DataFrame son nulos

datos.notnull() #devuelve false si los valores del DataFrame son nulos

datos.info()

datos[datos['Valor'].isnull()]   #muestra solo los registros del DataFrame donde 'Valor' es nulo

A = datos.shape[0] #muestra la cantidad de registros del DataFrame antes de eliminar
datos.dropna(subset = ['Valor'], inplace = True)  #elimina las filas con valores nulos en la columna Valor
B = datos.shape[0] #muestra la cantidad de registros del DataFrame dsps de eliminar
A - B   #hago la resta entre A y B para mostrar la cantidad de registros eliminados

datos[datos['Valor'].isnull()]

"""##Tratamiento de datos faltantes (continuacion)"""

datos

datos[datos['Mantenimiento'].isnull()]  #muestra solo los registros del DataFrame donde 'Mantenimiento' es nulo

datos[datos['Mantenimiento'].isnull()].shape[0] #muestra la cantidad de registros nulos con la condicion

seleccion = (datos['Mantenimiento'].isnull()) & (datos['Tipo']=='Departamento')

A = datos.shape[0] #muestra la cantidad de registros del DataFrame antes de eliminar
datos = datos[~seleccion]  #asigna a datos todo lo que sea contrario a seleccion
B = datos.shape[0] #muestra la cantidad de registros del DataFrame dsps de eliminar
A - B   #hago la resta entre A y B para mostrar la cantidad de registros eliminados 
#o sea estamos eliminando los Departamentos cuyo valor de Mantenimiento es Nulo

datos[datos['Mantenimiento'].isnull()].shape[0]

datos = datos.fillna({'Mantenimiento':0 , 'Impuesto':0})  #estamos llenando los valores nulos de las columnas Mantenimiento e Impuesto con 0

datos.info()

datos[datos['Mantenimiento'].isnull()].shape[0]

datos[datos['Impuesto'].isnull()].shape[0]

datos.to_csv('alquiler_residencial.csv', sep=';', index= False)

